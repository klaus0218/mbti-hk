version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mbti-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: mbti_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
    networks:
      - mbti-network
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: hkmbti-backend
    restart: always
    ports:
      - "9091:5000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/mbti_db
      # Alternative: Use individual variables
      # DB_HOST: postgres
      # DB_PORT: 5432
      # DB_NAME: mbti_db
      # DB_USER: postgres
      # DB_PASSWORD: password123
      # DB_SSL: false
      PORT: 5000
      JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mbti-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev  # Use nodemon for hot reload in development

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: hkmbti-frontend
    restart: always
    ports:
      - "9090:3000"
    environment:
      REACT_APP_API_URL: http://localhost:9091
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
      FAST_REFRESH: true
    depends_on:
      - backend
    networks:
      - mbti-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/postgres_data

networks:
  mbti-network:
    driver: bridge
